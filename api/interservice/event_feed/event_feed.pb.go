// Code generated by protoc-gen-go. DO NOT EDIT.
// source: interservice/event_feed/event_feed.proto

package event_feed

import (
	context "context"
	fmt "fmt"
	event "github.com/chef/automate/api/interservice/event"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeedRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty" toml:"UserID,omitempty" mapstructure:"UserID,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty" toml:"Size,omitempty" mapstructure:"Size,omitempty"`
	Start                int64    `protobuf:"varint,4,opt,name=Start,proto3" json:"Start,omitempty" toml:"Start,omitempty" mapstructure:"Start,omitempty"`
	End                  int64    `protobuf:"varint,5,opt,name=End,proto3" json:"End,omitempty" toml:"End,omitempty" mapstructure:"End,omitempty"`
	Before               int64    `protobuf:"varint,6,opt,name=Before,proto3" json:"Before,omitempty" toml:"Before,omitempty" mapstructure:"Before,omitempty"`
	After                int64    `protobuf:"varint,7,opt,name=After,proto3" json:"After,omitempty" toml:"After,omitempty" mapstructure:"After,omitempty"`
	Sort                 []string `protobuf:"bytes,8,rep,name=Sort,proto3" json:"Sort,omitempty" toml:"Sort,omitempty" mapstructure:"Sort,omitempty"`
	Filters              []string `protobuf:"bytes,9,rep,name=Filters,proto3" json:"Filters,omitempty" toml:"Filters,omitempty" mapstructure:"Filters,omitempty"`
	Cursor               string   `protobuf:"bytes,10,opt,name=Cursor,proto3" json:"Cursor,omitempty" toml:"Cursor,omitempty" mapstructure:"Cursor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedRequest) Reset()         { *m = FeedRequest{} }
func (m *FeedRequest) String() string { return proto.CompactTextString(m) }
func (*FeedRequest) ProtoMessage()    {}
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{0}
}

func (m *FeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedRequest.Unmarshal(m, b)
}
func (m *FeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedRequest.Marshal(b, m, deterministic)
}
func (m *FeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedRequest.Merge(m, src)
}
func (m *FeedRequest) XXX_Size() int {
	return xxx_messageInfo_FeedRequest.Size(m)
}
func (m *FeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedRequest proto.InternalMessageInfo

func (m *FeedRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *FeedRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FeedRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *FeedRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *FeedRequest) GetBefore() int64 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *FeedRequest) GetAfter() int64 {
	if m != nil {
		return m.After
	}
	return 0
}

func (m *FeedRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *FeedRequest) GetFilters() []string {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *FeedRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type FeedResponse struct {
	FeedEntries          []*FeedEntry `protobuf:"bytes,1,rep,name=FeedEntries,proto3" json:"FeedEntries,omitempty" toml:"FeedEntries,omitempty" mapstructure:"FeedEntries,omitempty"`
	TotalEntries         int64        `protobuf:"varint,2,opt,name=TotalEntries,proto3" json:"TotalEntries,omitempty" toml:"TotalEntries,omitempty" mapstructure:"TotalEntries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte       `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32        `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedResponse) Reset()         { *m = FeedResponse{} }
func (m *FeedResponse) String() string { return proto.CompactTextString(m) }
func (*FeedResponse) ProtoMessage()    {}
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{1}
}

func (m *FeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedResponse.Unmarshal(m, b)
}
func (m *FeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedResponse.Marshal(b, m, deterministic)
}
func (m *FeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedResponse.Merge(m, src)
}
func (m *FeedResponse) XXX_Size() int {
	return xxx_messageInfo_FeedResponse.Size(m)
}
func (m *FeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedResponse proto.InternalMessageInfo

func (m *FeedResponse) GetFeedEntries() []*FeedEntry {
	if m != nil {
		return m.FeedEntries
	}
	return nil
}

func (m *FeedResponse) GetTotalEntries() int64 {
	if m != nil {
		return m.TotalEntries
	}
	return 0
}

type FeedEntry struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" toml:"ID,omitempty" mapstructure:"ID,omitempty"`
	EventType            string               `protobuf:"bytes,2,opt,name=EventType,proto3" json:"EventType,omitempty" toml:"EventType,omitempty" mapstructure:"EventType,omitempty"`
	FeedType             string               `protobuf:"bytes,3,opt,name=FeedType,proto3" json:"FeedType,omitempty" toml:"FeedType,omitempty" mapstructure:"FeedType,omitempty"`
	Tags                 []string             `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty" toml:"Tags,omitempty" mapstructure:"Tags,omitempty"`
	SourceEventPublished *timestamp.Timestamp `protobuf:"bytes,5,opt,name=SourceEventPublished,proto3" json:"SourceEventPublished,omitempty" toml:"SourceEventPublished,omitempty" mapstructure:"SourceEventPublished,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Created,proto3" json:"Created,omitempty" toml:"Created,omitempty" mapstructure:"Created,omitempty"`
	Producer             *Producer            `protobuf:"bytes,7,opt,name=Producer,proto3" json:"Producer,omitempty" toml:"Producer,omitempty" mapstructure:"Producer,omitempty"`
	Actor                *Actor               `protobuf:"bytes,8,opt,name=Actor,proto3" json:"Actor,omitempty" toml:"Actor,omitempty" mapstructure:"Actor,omitempty"`
	Verb                 string               `protobuf:"bytes,9,opt,name=Verb,proto3" json:"Verb,omitempty" toml:"Verb,omitempty" mapstructure:"Verb,omitempty"`
	Object               *Object              `protobuf:"bytes,10,opt,name=Object,proto3" json:"Object,omitempty" toml:"Object,omitempty" mapstructure:"Object,omitempty"`
	Target               *Target              `protobuf:"bytes,11,opt,name=Target,proto3" json:"Target,omitempty" toml:"Target,omitempty" mapstructure:"Target,omitempty"`
	Parent               *Parent              `protobuf:"bytes,12,opt,name=Parent,proto3" json:"Parent,omitempty" toml:"Parent,omitempty" mapstructure:"Parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte               `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32                `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedEntry) Reset()         { *m = FeedEntry{} }
func (m *FeedEntry) String() string { return proto.CompactTextString(m) }
func (*FeedEntry) ProtoMessage()    {}
func (*FeedEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{2}
}

func (m *FeedEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedEntry.Unmarshal(m, b)
}
func (m *FeedEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedEntry.Marshal(b, m, deterministic)
}
func (m *FeedEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedEntry.Merge(m, src)
}
func (m *FeedEntry) XXX_Size() int {
	return xxx_messageInfo_FeedEntry.Size(m)
}
func (m *FeedEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FeedEntry proto.InternalMessageInfo

func (m *FeedEntry) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *FeedEntry) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *FeedEntry) GetFeedType() string {
	if m != nil {
		return m.FeedType
	}
	return ""
}

func (m *FeedEntry) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FeedEntry) GetSourceEventPublished() *timestamp.Timestamp {
	if m != nil {
		return m.SourceEventPublished
	}
	return nil
}

func (m *FeedEntry) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *FeedEntry) GetProducer() *Producer {
	if m != nil {
		return m.Producer
	}
	return nil
}

func (m *FeedEntry) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *FeedEntry) GetVerb() string {
	if m != nil {
		return m.Verb
	}
	return ""
}

func (m *FeedEntry) GetObject() *Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *FeedEntry) GetTarget() *Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *FeedEntry) GetParent() *Parent {
	if m != nil {
		return m.Parent
	}
	return nil
}

type Parent struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" toml:"ID,omitempty" mapstructure:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" toml:"Name,omitempty" mapstructure:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Parent) Reset()         { *m = Parent{} }
func (m *Parent) String() string { return proto.CompactTextString(m) }
func (*Parent) ProtoMessage()    {}
func (*Parent) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{3}
}

func (m *Parent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parent.Unmarshal(m, b)
}
func (m *Parent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parent.Marshal(b, m, deterministic)
}
func (m *Parent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parent.Merge(m, src)
}
func (m *Parent) XXX_Size() int {
	return xxx_messageInfo_Parent.Size(m)
}
func (m *Parent) XXX_DiscardUnknown() {
	xxx_messageInfo_Parent.DiscardUnknown(m)
}

var xxx_messageInfo_Parent proto.InternalMessageInfo

func (m *Parent) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Parent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Producer struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" toml:"ID,omitempty" mapstructure:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" toml:"Name,omitempty" mapstructure:"Name,omitempty"`
	ObjectType           string   `protobuf:"bytes,3,opt,name=ObjectType,proto3" json:"ObjectType,omitempty" toml:"ObjectType,omitempty" mapstructure:"ObjectType,omitempty"`
	PTags                []string `protobuf:"bytes,4,rep,name=PTags,proto3" json:"PTags,omitempty" toml:"PTags,omitempty" mapstructure:"PTags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Producer) Reset()         { *m = Producer{} }
func (m *Producer) String() string { return proto.CompactTextString(m) }
func (*Producer) ProtoMessage()    {}
func (*Producer) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{4}
}

func (m *Producer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Producer.Unmarshal(m, b)
}
func (m *Producer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Producer.Marshal(b, m, deterministic)
}
func (m *Producer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Producer.Merge(m, src)
}
func (m *Producer) XXX_Size() int {
	return xxx_messageInfo_Producer.Size(m)
}
func (m *Producer) XXX_DiscardUnknown() {
	xxx_messageInfo_Producer.DiscardUnknown(m)
}

var xxx_messageInfo_Producer proto.InternalMessageInfo

func (m *Producer) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Producer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Producer) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *Producer) GetPTags() []string {
	if m != nil {
		return m.PTags
	}
	return nil
}

type Actor struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" toml:"ID,omitempty" mapstructure:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" toml:"Name,omitempty" mapstructure:"Name,omitempty"`
	ObjectType           string   `protobuf:"bytes,3,opt,name=ObjectType,proto3" json:"ObjectType,omitempty" toml:"ObjectType,omitempty" mapstructure:"ObjectType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Actor) Reset()         { *m = Actor{} }
func (m *Actor) String() string { return proto.CompactTextString(m) }
func (*Actor) ProtoMessage()    {}
func (*Actor) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{5}
}

func (m *Actor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Actor.Unmarshal(m, b)
}
func (m *Actor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Actor.Marshal(b, m, deterministic)
}
func (m *Actor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Actor.Merge(m, src)
}
func (m *Actor) XXX_Size() int {
	return xxx_messageInfo_Actor.Size(m)
}
func (m *Actor) XXX_DiscardUnknown() {
	xxx_messageInfo_Actor.DiscardUnknown(m)
}

var xxx_messageInfo_Actor proto.InternalMessageInfo

func (m *Actor) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Actor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Actor) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

type Object struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" toml:"ID,omitempty" mapstructure:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" toml:"Name,omitempty" mapstructure:"Name,omitempty"`
	ObjectType           string   `protobuf:"bytes,3,opt,name=ObjectType,proto3" json:"ObjectType,omitempty" toml:"ObjectType,omitempty" mapstructure:"ObjectType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{6}
}

func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (m *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(m, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

func (m *Object) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Object) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Object) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

type Target struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" toml:"ID,omitempty" mapstructure:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" toml:"Name,omitempty" mapstructure:"Name,omitempty"`
	ObjectType           string   `protobuf:"bytes,3,opt,name=ObjectType,proto3" json:"ObjectType,omitempty" toml:"ObjectType,omitempty" mapstructure:"ObjectType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{7}
}

func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Target) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Target) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

type FeedSummaryRequest struct {
	Start                int64    `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty" toml:"Start,omitempty" mapstructure:"Start,omitempty"`
	End                  int64    `protobuf:"varint,2,opt,name=End,proto3" json:"End,omitempty" toml:"End,omitempty" mapstructure:"End,omitempty"`
	Size                 int32    `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty" toml:"Size,omitempty" mapstructure:"Size,omitempty"`
	From                 int32    `protobuf:"varint,5,opt,name=From,proto3" json:"From,omitempty" toml:"From,omitempty" mapstructure:"From,omitempty"`
	StartAfter           string   `protobuf:"bytes,6,opt,name=StartAfter,proto3" json:"StartAfter,omitempty" toml:"StartAfter,omitempty" mapstructure:"StartAfter,omitempty"`
	Filters              []string `protobuf:"bytes,7,rep,name=Filters,proto3" json:"Filters,omitempty" toml:"Filters,omitempty" mapstructure:"Filters,omitempty"`
	CountCategory        string   `protobuf:"bytes,9,opt,name=CountCategory,proto3" json:"CountCategory,omitempty" toml:"CountCategory,omitempty" mapstructure:"CountCategory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedSummaryRequest) Reset()         { *m = FeedSummaryRequest{} }
func (m *FeedSummaryRequest) String() string { return proto.CompactTextString(m) }
func (*FeedSummaryRequest) ProtoMessage()    {}
func (*FeedSummaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{8}
}

func (m *FeedSummaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedSummaryRequest.Unmarshal(m, b)
}
func (m *FeedSummaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedSummaryRequest.Marshal(b, m, deterministic)
}
func (m *FeedSummaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedSummaryRequest.Merge(m, src)
}
func (m *FeedSummaryRequest) XXX_Size() int {
	return xxx_messageInfo_FeedSummaryRequest.Size(m)
}
func (m *FeedSummaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedSummaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedSummaryRequest proto.InternalMessageInfo

func (m *FeedSummaryRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *FeedSummaryRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *FeedSummaryRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FeedSummaryRequest) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *FeedSummaryRequest) GetStartAfter() string {
	if m != nil {
		return m.StartAfter
	}
	return ""
}

func (m *FeedSummaryRequest) GetFilters() []string {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *FeedSummaryRequest) GetCountCategory() string {
	if m != nil {
		return m.CountCategory
	}
	return ""
}

type FeedSummaryResponse struct {
	TotalEntries         int64         `protobuf:"varint,1,opt,name=TotalEntries,proto3" json:"TotalEntries,omitempty" toml:"TotalEntries,omitempty" mapstructure:"TotalEntries,omitempty"`
	EntryCounts          []*EntryCount `protobuf:"bytes,2,rep,name=EntryCounts,proto3" json:"EntryCounts,omitempty" toml:"EntryCounts,omitempty" mapstructure:"EntryCounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedSummaryResponse) Reset()         { *m = FeedSummaryResponse{} }
func (m *FeedSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*FeedSummaryResponse) ProtoMessage()    {}
func (*FeedSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{9}
}

func (m *FeedSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedSummaryResponse.Unmarshal(m, b)
}
func (m *FeedSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedSummaryResponse.Marshal(b, m, deterministic)
}
func (m *FeedSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedSummaryResponse.Merge(m, src)
}
func (m *FeedSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_FeedSummaryResponse.Size(m)
}
func (m *FeedSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedSummaryResponse proto.InternalMessageInfo

func (m *FeedSummaryResponse) GetTotalEntries() int64 {
	if m != nil {
		return m.TotalEntries
	}
	return 0
}

func (m *FeedSummaryResponse) GetEntryCounts() []*EntryCount {
	if m != nil {
		return m.EntryCounts
	}
	return nil
}

type EntryCount struct {
	Category             string   `protobuf:"bytes,1,opt,name=Category,proto3" json:"Category,omitempty" toml:"Category,omitempty" mapstructure:"Category,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty" toml:"Count,omitempty" mapstructure:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *EntryCount) Reset()         { *m = EntryCount{} }
func (m *EntryCount) String() string { return proto.CompactTextString(m) }
func (*EntryCount) ProtoMessage()    {}
func (*EntryCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{10}
}

func (m *EntryCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryCount.Unmarshal(m, b)
}
func (m *EntryCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryCount.Marshal(b, m, deterministic)
}
func (m *EntryCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryCount.Merge(m, src)
}
func (m *EntryCount) XXX_Size() int {
	return xxx_messageInfo_EntryCount.Size(m)
}
func (m *EntryCount) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryCount.DiscardUnknown(m)
}

var xxx_messageInfo_EntryCount proto.InternalMessageInfo

func (m *EntryCount) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *EntryCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type FeedTimelineRequest struct {
	Start                string   `protobuf:"bytes,1,opt,name=Start,proto3" json:"Start,omitempty" toml:"Start,omitempty" mapstructure:"Start,omitempty"`
	End                  string   `protobuf:"bytes,2,opt,name=End,proto3" json:"End,omitempty" toml:"End,omitempty" mapstructure:"End,omitempty"`
	Timezone             string   `protobuf:"bytes,3,opt,name=Timezone,proto3" json:"Timezone,omitempty" toml:"Timezone,omitempty" mapstructure:"Timezone,omitempty"`
	Interval             int32    `protobuf:"varint,4,opt,name=Interval,proto3" json:"Interval,omitempty" toml:"Interval,omitempty" mapstructure:"Interval,omitempty"`
	Filters              []string `protobuf:"bytes,5,rep,name=Filters,proto3" json:"Filters,omitempty" toml:"Filters,omitempty" mapstructure:"Filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte   `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32    `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedTimelineRequest) Reset()         { *m = FeedTimelineRequest{} }
func (m *FeedTimelineRequest) String() string { return proto.CompactTextString(m) }
func (*FeedTimelineRequest) ProtoMessage()    {}
func (*FeedTimelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{11}
}

func (m *FeedTimelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedTimelineRequest.Unmarshal(m, b)
}
func (m *FeedTimelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedTimelineRequest.Marshal(b, m, deterministic)
}
func (m *FeedTimelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedTimelineRequest.Merge(m, src)
}
func (m *FeedTimelineRequest) XXX_Size() int {
	return xxx_messageInfo_FeedTimelineRequest.Size(m)
}
func (m *FeedTimelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedTimelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedTimelineRequest proto.InternalMessageInfo

func (m *FeedTimelineRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *FeedTimelineRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *FeedTimelineRequest) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *FeedTimelineRequest) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *FeedTimelineRequest) GetFilters() []string {
	if m != nil {
		return m.Filters
	}
	return nil
}

type FeedTimelineResponse struct {
	Start                string        `protobuf:"bytes,1,opt,name=Start,proto3" json:"Start,omitempty" toml:"Start,omitempty" mapstructure:"Start,omitempty"`
	End                  string        `protobuf:"bytes,2,opt,name=End,proto3" json:"End,omitempty" toml:"End,omitempty" mapstructure:"End,omitempty"`
	Interval             int32         `protobuf:"varint,3,opt,name=Interval,proto3" json:"Interval,omitempty" toml:"Interval,omitempty" mapstructure:"Interval,omitempty"`
	ActionLines          []*ActionLine `protobuf:"bytes,4,rep,name=ActionLines,proto3" json:"ActionLines,omitempty" toml:"ActionLines,omitempty" mapstructure:"ActionLines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *FeedTimelineResponse) Reset()         { *m = FeedTimelineResponse{} }
func (m *FeedTimelineResponse) String() string { return proto.CompactTextString(m) }
func (*FeedTimelineResponse) ProtoMessage()    {}
func (*FeedTimelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{12}
}

func (m *FeedTimelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedTimelineResponse.Unmarshal(m, b)
}
func (m *FeedTimelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedTimelineResponse.Marshal(b, m, deterministic)
}
func (m *FeedTimelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedTimelineResponse.Merge(m, src)
}
func (m *FeedTimelineResponse) XXX_Size() int {
	return xxx_messageInfo_FeedTimelineResponse.Size(m)
}
func (m *FeedTimelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedTimelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedTimelineResponse proto.InternalMessageInfo

func (m *FeedTimelineResponse) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *FeedTimelineResponse) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *FeedTimelineResponse) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *FeedTimelineResponse) GetActionLines() []*ActionLine {
	if m != nil {
		return m.ActionLines
	}
	return nil
}

type ActionLine struct {
	Action               string      `protobuf:"bytes,1,opt,name=Action,proto3" json:"Action,omitempty" toml:"Action,omitempty" mapstructure:"Action,omitempty"`
	Slots                []*Timeslot `protobuf:"bytes,2,rep,name=Slots,proto3" json:"Slots,omitempty" toml:"Slots,omitempty" mapstructure:"Slots,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32       `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *ActionLine) Reset()         { *m = ActionLine{} }
func (m *ActionLine) String() string { return proto.CompactTextString(m) }
func (*ActionLine) ProtoMessage()    {}
func (*ActionLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{13}
}

func (m *ActionLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLine.Unmarshal(m, b)
}
func (m *ActionLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLine.Marshal(b, m, deterministic)
}
func (m *ActionLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLine.Merge(m, src)
}
func (m *ActionLine) XXX_Size() int {
	return xxx_messageInfo_ActionLine.Size(m)
}
func (m *ActionLine) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLine.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLine proto.InternalMessageInfo

func (m *ActionLine) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ActionLine) GetSlots() []*Timeslot {
	if m != nil {
		return m.Slots
	}
	return nil
}

type Timeslot struct {
	Counts               []*EntryCount `protobuf:"bytes,1,rep,name=Counts,proto3" json:"Counts,omitempty" toml:"Counts,omitempty" mapstructure:"Counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_unrecognized     []byte        `json:"-" toml:"-" mapstructure:"-,omitempty"`
	XXX_sizecache        int32         `json:"-" toml:"-" mapstructure:"-,omitempty"`
}

func (m *Timeslot) Reset()         { *m = Timeslot{} }
func (m *Timeslot) String() string { return proto.CompactTextString(m) }
func (*Timeslot) ProtoMessage()    {}
func (*Timeslot) Descriptor() ([]byte, []int) {
	return fileDescriptor_58917e6ba7c55265, []int{14}
}

func (m *Timeslot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timeslot.Unmarshal(m, b)
}
func (m *Timeslot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timeslot.Marshal(b, m, deterministic)
}
func (m *Timeslot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timeslot.Merge(m, src)
}
func (m *Timeslot) XXX_Size() int {
	return xxx_messageInfo_Timeslot.Size(m)
}
func (m *Timeslot) XXX_DiscardUnknown() {
	xxx_messageInfo_Timeslot.DiscardUnknown(m)
}

var xxx_messageInfo_Timeslot proto.InternalMessageInfo

func (m *Timeslot) GetCounts() []*EntryCount {
	if m != nil {
		return m.Counts
	}
	return nil
}

func init() {
	proto.RegisterType((*FeedRequest)(nil), "chef.automate.domain.event_feed.api.FeedRequest")
	proto.RegisterType((*FeedResponse)(nil), "chef.automate.domain.event_feed.api.FeedResponse")
	proto.RegisterType((*FeedEntry)(nil), "chef.automate.domain.event_feed.api.FeedEntry")
	proto.RegisterType((*Parent)(nil), "chef.automate.domain.event_feed.api.Parent")
	proto.RegisterType((*Producer)(nil), "chef.automate.domain.event_feed.api.Producer")
	proto.RegisterType((*Actor)(nil), "chef.automate.domain.event_feed.api.Actor")
	proto.RegisterType((*Object)(nil), "chef.automate.domain.event_feed.api.Object")
	proto.RegisterType((*Target)(nil), "chef.automate.domain.event_feed.api.Target")
	proto.RegisterType((*FeedSummaryRequest)(nil), "chef.automate.domain.event_feed.api.FeedSummaryRequest")
	proto.RegisterType((*FeedSummaryResponse)(nil), "chef.automate.domain.event_feed.api.FeedSummaryResponse")
	proto.RegisterType((*EntryCount)(nil), "chef.automate.domain.event_feed.api.EntryCount")
	proto.RegisterType((*FeedTimelineRequest)(nil), "chef.automate.domain.event_feed.api.FeedTimelineRequest")
	proto.RegisterType((*FeedTimelineResponse)(nil), "chef.automate.domain.event_feed.api.FeedTimelineResponse")
	proto.RegisterType((*ActionLine)(nil), "chef.automate.domain.event_feed.api.ActionLine")
	proto.RegisterType((*Timeslot)(nil), "chef.automate.domain.event_feed.api.Timeslot")
}

func init() {
	proto.RegisterFile("interservice/event_feed/event_feed.proto", fileDescriptor_58917e6ba7c55265)
}

var fileDescriptor_58917e6ba7c55265 = []byte{
	// 957 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x8e, 0xe3, 0x44,
	0x10, 0x96, 0xf3, 0xef, 0xf2, 0xb0, 0xac, 0x9a, 0x11, 0xb2, 0x2c, 0xb4, 0x44, 0x86, 0x43, 0x04,
	0xac, 0x03, 0x61, 0xc5, 0xcf, 0x05, 0x31, 0x9b, 0x9d, 0x59, 0x46, 0x2c, 0x4b, 0xd6, 0x09, 0x1c,
	0xb8, 0x20, 0x27, 0xa9, 0x64, 0x8c, 0x6c, 0x77, 0x68, 0xb7, 0x47, 0x9a, 0xbd, 0x82, 0x38, 0x21,
	0xf1, 0x24, 0xbc, 0x05, 0xaf, 0xc0, 0x99, 0xe7, 0xe0, 0x86, 0xfa, 0xcf, 0x71, 0x66, 0xc2, 0xca,
	0x19, 0xcd, 0x25, 0xaa, 0xaa, 0xf4, 0xf7, 0x75, 0x75, 0x55, 0xf5, 0xe7, 0x86, 0x41, 0x9c, 0x71,
	0x64, 0x39, 0xb2, 0xcb, 0x78, 0x81, 0x43, 0xbc, 0xc4, 0x8c, 0xff, 0xb8, 0x42, 0x5c, 0x56, 0xcc,
	0x60, 0xc3, 0x28, 0xa7, 0xe4, 0x9d, 0xc5, 0x05, 0xae, 0x82, 0xa8, 0xe0, 0x34, 0x8d, 0x38, 0x06,
	0x4b, 0x9a, 0x46, 0x71, 0x16, 0x54, 0x96, 0x45, 0x9b, 0xd8, 0x7b, 0x70, 0x93, 0x4e, 0xfd, 0x2a,
	0x12, 0xef, 0xed, 0x35, 0xa5, 0xeb, 0x04, 0x87, 0xd2, 0x9b, 0x17, 0xab, 0x21, 0x8f, 0x53, 0xcc,
	0x79, 0x94, 0x6e, 0xd4, 0x02, 0xff, 0x6f, 0x0b, 0x9c, 0x33, 0xc4, 0x65, 0x88, 0x3f, 0x17, 0x98,
	0x73, 0xf2, 0x26, 0x74, 0xbe, 0xcb, 0x91, 0x9d, 0x3f, 0x71, 0xad, 0xbe, 0x35, 0xb0, 0x43, 0xed,
	0x11, 0x02, 0xad, 0x69, 0xfc, 0x12, 0xdd, 0x46, 0xdf, 0x1a, 0xb4, 0x43, 0x69, 0x93, 0x63, 0x68,
	0x4f, 0x79, 0xc4, 0xb8, 0xdb, 0xea, 0x5b, 0x83, 0x66, 0xa8, 0x1c, 0x72, 0x1f, 0x9a, 0xa7, 0xd9,
	0xd2, 0x6d, 0xcb, 0x98, 0x30, 0x05, 0xe7, 0x63, 0x5c, 0x51, 0x86, 0x6e, 0x47, 0x06, 0xb5, 0x27,
	0xf0, 0x27, 0x2b, 0x8e, 0xcc, 0xed, 0x2a, 0xbc, 0x74, 0xe4, 0x4e, 0x94, 0x71, 0xb7, 0xd7, 0x6f,
	0x0e, 0xec, 0x50, 0xda, 0xc4, 0x85, 0xee, 0x59, 0x9c, 0x88, 0x93, 0xba, 0xb6, 0x0c, 0x1b, 0x57,
	0x70, 0x8f, 0x0b, 0x96, 0x53, 0xe6, 0x82, 0xca, 0x57, 0x79, 0xfe, 0xaf, 0x16, 0x1c, 0xa9, 0x73,
	0xe5, 0x1b, 0x9a, 0xe5, 0x48, 0x26, 0xea, 0x9c, 0xa7, 0x19, 0x67, 0x31, 0xe6, 0xae, 0xd5, 0x6f,
	0x0e, 0x9c, 0x51, 0x10, 0xd4, 0x28, 0x72, 0x60, 0x70, 0x57, 0x61, 0x95, 0x82, 0xf8, 0x70, 0x34,
	0xa3, 0x3c, 0x4a, 0x0c, 0x65, 0x43, 0x9e, 0x62, 0x27, 0xe6, 0xff, 0xd3, 0x02, 0xbb, 0x84, 0x93,
	0x7b, 0xd0, 0x28, 0x0b, 0xdb, 0x38, 0x7f, 0x42, 0xde, 0x02, 0xfb, 0x54, 0x6c, 0x35, 0xbb, 0xda,
	0xa8, 0xca, 0xda, 0xe1, 0x36, 0x40, 0x3c, 0xe8, 0x09, 0xa8, 0xfc, 0xb3, 0x29, 0xff, 0x2c, 0x7d,
	0x51, 0xa4, 0x59, 0xb4, 0xce, 0xdd, 0x96, 0x2a, 0x92, 0xb0, 0xc9, 0x73, 0x38, 0x9e, 0xd2, 0x82,
	0x2d, 0x50, 0x52, 0x4c, 0x8a, 0x79, 0x12, 0xe7, 0x17, 0xa8, 0x3a, 0xe1, 0x8c, 0xbc, 0x40, 0x8d,
	0x42, 0x60, 0x46, 0x21, 0x98, 0x99, 0x51, 0x08, 0xf7, 0xe2, 0xc8, 0x23, 0xe8, 0x8e, 0x19, 0x46,
	0x1c, 0x97, 0xb2, 0x6f, 0xaf, 0xa6, 0x30, 0x4b, 0xc9, 0x39, 0xf4, 0x26, 0x8c, 0x2e, 0x8b, 0x85,
	0xee, 0xab, 0x33, 0x7a, 0x58, 0xab, 0xc8, 0x06, 0x14, 0x96, 0x70, 0xf2, 0x25, 0xb4, 0x4f, 0x16,
	0x9c, 0x32, 0xb7, 0x27, 0x79, 0xde, 0xab, 0xc5, 0x23, 0x11, 0xa1, 0x02, 0x8a, 0x32, 0x7d, 0x8f,
	0x6c, 0xee, 0xda, 0xb2, 0x7c, 0xd2, 0x26, 0x63, 0xe8, 0x7c, 0x3b, 0xff, 0x09, 0x17, 0x5c, 0x4e,
	0x8c, 0x33, 0x7a, 0xbf, 0x16, 0xad, 0x82, 0x84, 0x1a, 0x2a, 0x48, 0x66, 0x11, 0x5b, 0x23, 0x77,
	0x9d, 0x03, 0x48, 0x14, 0x24, 0xd4, 0x50, 0x41, 0x32, 0x89, 0x18, 0x66, 0xdc, 0x3d, 0x3a, 0x80,
	0x44, 0x41, 0x42, 0x0d, 0xf5, 0x3f, 0x30, 0x24, 0x37, 0xa6, 0x8b, 0x40, 0xeb, 0x79, 0x94, 0x9a,
	0xc1, 0x92, 0xb6, 0xbf, 0xdc, 0x76, 0xa7, 0xce, 0x7a, 0xf2, 0x00, 0x40, 0x9d, 0xb8, 0x32, 0x85,
	0x95, 0x88, 0xb8, 0xc2, 0x93, 0xca, 0x20, 0x2a, 0xc7, 0xff, 0x5a, 0x37, 0xee, 0x2e, 0xb6, 0xf0,
	0x9f, 0x99, 0x7e, 0xdd, 0x15, 0x9b, 0xae, 0xfe, 0x5d, 0xb0, 0xfd, 0x65, 0x01, 0x11, 0x77, 0x72,
	0x5a, 0xa4, 0x69, 0xc4, 0xae, 0x8c, 0x88, 0x96, 0xc2, 0x68, 0xed, 0x11, 0xc6, 0xc6, 0x56, 0x18,
	0x8d, 0xa8, 0xb6, 0x2a, 0xa2, 0x4a, 0xa0, 0x75, 0xc6, 0x68, 0x2a, 0x6f, 0x6d, 0x3b, 0x94, 0xb6,
	0x48, 0x43, 0x52, 0x28, 0xb5, 0xec, 0xa8, 0x34, 0xb6, 0x91, 0xaa, 0x3c, 0x76, 0x77, 0xe5, 0xf1,
	0x5d, 0x78, 0x6d, 0x4c, 0x8b, 0x8c, 0x8f, 0x23, 0x8e, 0x6b, 0xca, 0xae, 0xf4, 0x4d, 0xd8, 0x0d,
	0xfa, 0xbf, 0x5b, 0xf0, 0xc6, 0xce, 0x31, 0xb4, 0x66, 0x5e, 0x57, 0x38, 0xeb, 0xa6, 0xc2, 0x91,
	0x17, 0xe0, 0x48, 0x71, 0x93, 0x8c, 0x42, 0x04, 0x85, 0xae, 0x0e, 0x6b, 0x4d, 0xf2, 0x16, 0x17,
	0x56, 0x39, 0xfc, 0x2f, 0x00, 0xb6, 0xae, 0x90, 0xc1, 0x32, 0x7b, 0xd5, 0xad, 0xd2, 0x17, 0x85,
	0x96, 0x8b, 0x74, 0x51, 0x95, 0xe3, 0xff, 0xa1, 0x8f, 0x23, 0xd4, 0x29, 0x89, 0x33, 0xdc, 0xdb,
	0x16, 0x7b, 0x4f, 0x5b, 0x6c, 0xd5, 0x16, 0x0f, 0x7a, 0x02, 0xfa, 0x92, 0x66, 0xa5, 0xf0, 0x1a,
	0x5f, 0xfc, 0x77, 0x2e, 0x3e, 0xb9, 0x97, 0x51, 0xa2, 0xdb, 0x56, 0xfa, 0xd5, 0x36, 0xb4, 0x77,
	0xda, 0xe0, 0xff, 0x69, 0xc1, 0xf1, 0x6e, 0x46, 0xba, 0xc2, 0x07, 0xa4, 0x54, 0x6e, 0xdb, 0xbc,
	0xb6, 0xed, 0x0b, 0x70, 0x4e, 0x16, 0x3c, 0xa6, 0xd9, 0xb3, 0x38, 0x43, 0x75, 0x13, 0xeb, 0x76,
	0x60, 0x8b, 0x0b, 0xab, 0x1c, 0x7e, 0x0c, 0xb0, 0x75, 0xc5, 0x37, 0x56, 0x79, 0xe6, 0x4d, 0xa0,
	0x3c, 0x32, 0x86, 0xf6, 0x34, 0xa1, 0x65, 0xd3, 0xeb, 0xe9, 0xbc, 0xfc, 0x64, 0x24, 0x94, 0x87,
	0x0a, 0xeb, 0x4f, 0x55, 0xb1, 0x45, 0x88, 0x3c, 0x85, 0x8e, 0x1e, 0x23, 0xeb, 0x76, 0x63, 0xa4,
	0xe1, 0xa3, 0x7f, 0x9b, 0x70, 0x5f, 0x7e, 0xcd, 0xe4, 0x54, 0xab, 0xd7, 0x11, 0xc9, 0xa0, 0xfb,
	0x14, 0x65, 0x84, 0x7c, 0x58, 0xfb, 0xbb, 0xaf, 0x67, 0xc7, 0xfb, 0xe8, 0x00, 0x84, 0xee, 0xed,
	0x2f, 0x16, 0xdc, 0xd3, 0x1b, 0xea, 0x8b, 0x45, 0x3e, 0xad, 0xcd, 0xb2, 0xab, 0x28, 0xde, 0x67,
	0x87, 0x03, 0x75, 0x16, 0xbf, 0x59, 0xf0, 0xba, 0xce, 0xc2, 0x4c, 0x1f, 0xa9, 0xcf, 0x76, 0xed,
	0x0a, 0x79, 0x9f, 0xdf, 0x02, 0xa9, 0x13, 0x59, 0x81, 0xf3, 0x55, 0x94, 0x2d, 0x13, 0xf5, 0xcc,
	0x20, 0x83, 0x57, 0x30, 0xa9, 0xb6, 0x0a, 0xeb, 0x9b, 0x7c, 0xed, 0x3d, 0xac, 0xb5, 0xd2, 0xec,
	0xf3, 0xf8, 0x93, 0x1f, 0x1e, 0xad, 0x63, 0x7e, 0x51, 0xcc, 0x83, 0x05, 0x4d, 0x87, 0x02, 0x3a,
	0x34, 0xd0, 0x61, 0xb4, 0x89, 0x87, 0xff, 0xf3, 0x00, 0x9f, 0x77, 0xe4, 0xab, 0xe6, 0xe3, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x10, 0x9f, 0x4c, 0x42, 0xa2, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventFeedServiceClient is the client API for EventFeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventFeedServiceClient interface {
	GetFeed(ctx context.Context, in *FeedRequest, opts ...grpc.CallOption) (*FeedResponse, error)
	GetFeedSummary(ctx context.Context, in *FeedSummaryRequest, opts ...grpc.CallOption) (*FeedSummaryResponse, error)
	GetFeedTimeline(ctx context.Context, in *FeedTimelineRequest, opts ...grpc.CallOption) (*FeedTimelineResponse, error)
	HandleEvent(ctx context.Context, in *event.EventMsg, opts ...grpc.CallOption) (*event.EventResponse, error)
}

type eventFeedServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEventFeedServiceClient(cc grpc.ClientConnInterface) EventFeedServiceClient {
	return &eventFeedServiceClient{cc}
}

func (c *eventFeedServiceClient) GetFeed(ctx context.Context, in *FeedRequest, opts ...grpc.CallOption) (*FeedResponse, error) {
	out := new(FeedResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.event_feed.api.EventFeedService/GetFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventFeedServiceClient) GetFeedSummary(ctx context.Context, in *FeedSummaryRequest, opts ...grpc.CallOption) (*FeedSummaryResponse, error) {
	out := new(FeedSummaryResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.event_feed.api.EventFeedService/GetFeedSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventFeedServiceClient) GetFeedTimeline(ctx context.Context, in *FeedTimelineRequest, opts ...grpc.CallOption) (*FeedTimelineResponse, error) {
	out := new(FeedTimelineResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.event_feed.api.EventFeedService/GetFeedTimeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventFeedServiceClient) HandleEvent(ctx context.Context, in *event.EventMsg, opts ...grpc.CallOption) (*event.EventResponse, error) {
	out := new(event.EventResponse)
	err := c.cc.Invoke(ctx, "/chef.automate.domain.event_feed.api.EventFeedService/HandleEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventFeedServiceServer is the server API for EventFeedService service.
type EventFeedServiceServer interface {
	GetFeed(context.Context, *FeedRequest) (*FeedResponse, error)
	GetFeedSummary(context.Context, *FeedSummaryRequest) (*FeedSummaryResponse, error)
	GetFeedTimeline(context.Context, *FeedTimelineRequest) (*FeedTimelineResponse, error)
	HandleEvent(context.Context, *event.EventMsg) (*event.EventResponse, error)
}

// UnimplementedEventFeedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventFeedServiceServer struct {
}

func (*UnimplementedEventFeedServiceServer) GetFeed(ctx context.Context, req *FeedRequest) (*FeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeed not implemented")
}
func (*UnimplementedEventFeedServiceServer) GetFeedSummary(ctx context.Context, req *FeedSummaryRequest) (*FeedSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeedSummary not implemented")
}
func (*UnimplementedEventFeedServiceServer) GetFeedTimeline(ctx context.Context, req *FeedTimelineRequest) (*FeedTimelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeedTimeline not implemented")
}
func (*UnimplementedEventFeedServiceServer) HandleEvent(ctx context.Context, req *event.EventMsg) (*event.EventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleEvent not implemented")
}

func RegisterEventFeedServiceServer(s *grpc.Server, srv EventFeedServiceServer) {
	s.RegisterService(&_EventFeedService_serviceDesc, srv)
}

func _EventFeedService_GetFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventFeedServiceServer).GetFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.event_feed.api.EventFeedService/GetFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventFeedServiceServer).GetFeed(ctx, req.(*FeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventFeedService_GetFeedSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventFeedServiceServer).GetFeedSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.event_feed.api.EventFeedService/GetFeedSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventFeedServiceServer).GetFeedSummary(ctx, req.(*FeedSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventFeedService_GetFeedTimeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedTimelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventFeedServiceServer).GetFeedTimeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.event_feed.api.EventFeedService/GetFeedTimeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventFeedServiceServer).GetFeedTimeline(ctx, req.(*FeedTimelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventFeedService_HandleEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(event.EventMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventFeedServiceServer).HandleEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chef.automate.domain.event_feed.api.EventFeedService/HandleEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventFeedServiceServer).HandleEvent(ctx, req.(*event.EventMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventFeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chef.automate.domain.event_feed.api.EventFeedService",
	HandlerType: (*EventFeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeed",
			Handler:    _EventFeedService_GetFeed_Handler,
		},
		{
			MethodName: "GetFeedSummary",
			Handler:    _EventFeedService_GetFeedSummary_Handler,
		},
		{
			MethodName: "GetFeedTimeline",
			Handler:    _EventFeedService_GetFeedTimeline_Handler,
		},
		{
			MethodName: "HandleEvent",
			Handler:    _EventFeedService_HandleEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "interservice/event_feed/event_feed.proto",
}
